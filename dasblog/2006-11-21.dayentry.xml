<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2006-11-21T01:00:00.0000000+01:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;I'm doing quite a bit of computer support for a couple of friends. Some of them come over to my place when they need my help with some installation, driver or have a software problem. Recently, &lt;a href="http://silke.pixelplastic.de/" rel="previewlink"&gt;Silke&lt;/a&gt;, one of my bigger support "customers"&amp;nbsp;moved to the United States and bought a new laptop because they're way cheaper there. We&amp;nbsp;needed a whole day installing Windows XP, drivers and software. IM and&amp;nbsp;Skype on a second machine were used for communication and obviously it's been quite onerous.&lt;/p&gt; &lt;p&gt;Unfortunately it's not possible to dial in to our home network over VPN because some router between Silke's and our &lt;a href="http://www.it99.org/axl/2006/06/23/Alive+And+Kicking+Again.aspx" rel="previewlink"&gt;server&lt;/a&gt; doesn't route &lt;a href="http://en.wikipedia.org/wiki/Generic_Routing_Encapsulation" rel="previewlink"&gt;GRE packets&lt;/a&gt;. I suspect it's the WLAN access point Silke has no control over. Because she's not allowed to administer it, creating a &lt;a href="http://www.it99.org/axl/2006/08/10/RDPTerminal+Services+Port+Configurator+For+Windows+Mobile.aspx" rel="previewlink"&gt;port mapping for Remote Desktop&lt;/a&gt; is also&amp;nbsp;not an option. Windows' own &lt;a href="http://support.microsoft.com/default.aspx/kb/300546" rel="previewlink"&gt;Remote Assistance&lt;/a&gt; doesn't work over firewalled/&lt;a href="http://en.wikipedia.org/wiki/Network_address_translation" rel="previewlink"&gt;NAT&lt;/a&gt;ed networks either.&lt;/p&gt; &lt;p&gt;I came up with a much simpler solution leveraging the power of &lt;a href="http://en.wikipedia.org/wiki/SSH" rel="previewlink"&gt;SSH&lt;/a&gt;. SSH supports &lt;a href="http://en.wikipedia.org/wiki/Tunneling_protocol#SSH_tunneling" rel="previewlink"&gt;tunneling&lt;/a&gt; TCP connections and is very likely to be allowed by a corporate firewall. If a user logs on remotely via SSH and sets up port tunneling, he/she is either able to access a previously blocked remote port over a local connection (local → remote, my term) or the user's machine can be contacted from the&amp;nbsp;SSH server over a remote → local tunnel (again, my term). The image below depicts both types of tunnels. There's a third&amp;nbsp;tunnel type, namely dynamic &lt;a href="http://en.wikipedia.org/wiki/SOCKS" rel="previewlink"&gt;SOCKS&lt;/a&gt; forwarding comparable to local → remote tunnels, but it's of no interest here.&lt;/p&gt; &lt;p align="center"&gt;&lt;a href="http://www.it99.org/axl/content/binary/SSH%20Tunnel.png"&gt;&lt;img title="SSH Tunnels" alt="SSH Tunnels" src="http://www.it99.org/axl/content/binary/SSH%20Tunnel%20small.png" border="0"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;As the "support engineer" all you need to do is set up a SSH server either on your local machine (and create a port mapping on your firewall/router) or on the firewall/router itself. There are couple of free SSH servers like &lt;a href="http://freesshd.com/" rel="previewlink"&gt;freeSSHd&lt;/a&gt;. It has some limitations, but is perfectly suitable for&amp;nbsp;the given task. After you've set up the server, created users and enabled tunneling, point your "support customer" to the &lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html" rel="previewlink"&gt;PuTTY download page&lt;/a&gt; and let him download the &lt;a href="http://the.earth.li/~sgtatham/putty/latest/x86/plink.exe"&gt;Plink&lt;/a&gt; executable. Direct him to start Plink as follows (&lt;a href="http://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter7.html#plink-usage" rel="previewlink"&gt;command line reference&lt;/a&gt;):&lt;/p&gt;&lt;pre&gt;plink -ssh -C -R 50000:127.0.0.1:3389 &amp;lt;username&amp;gt;@&amp;lt;SSH server address&amp;gt;
&lt;/pre&gt;
&lt;p&gt;This will establish&amp;nbsp;an encrypted SSH connection to your SSH server and set up a remote → local tunnel. The server will listen on port 50000 and forward all traffic to port 3389 (Remote Desktop) on the user's machine. You can then create a new Remote Desktop session on the server connecting to 127.0.0.1:50000.&lt;/p&gt;
&lt;p&gt;Unfortunately this cannot be used to work around the aforementioned problems with Remote Assistance, but in the end will provide a way of accessing otherwise protected machines over the internet.&amp;nbsp;Of course, this will not only work with RDP connections but with all other types of servers.&lt;/p&gt;</Content>
      <Created>2006-11-21T16:37:08.0937500+01:00</Created>
      <Modified>2006-11-21T16:37:08.0937500+01:00</Modified>
      <EntryId>c25ab7aa-e4b2-4837-aaa3-a68208020d21</EntryId>
      <Title>Supporting Users Over The Internet: Overcoming Firewalled Networks</Title>
      <Categories>Networking</Categories>
      <Author>agross</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
    </Entry>
  </Entries>
</DayEntry>