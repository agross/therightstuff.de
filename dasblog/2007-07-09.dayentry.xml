<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2007-07-09T02:00:00.0000000+02:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;h3&gt;Introduction&lt;/h3&gt; &lt;p&gt;Visual Studio 2005 has a vast amount of functionality and makes editing and refactoring code a lot easier than it was the case&amp;nbsp;in Visual Studio .NET 2003. The refactoring and inline-fixing functionality like "using namespace" introduced in 2005 is responsible for a great deal of that. By the time Visual Studio 2005 hit the market I was pretty impressed by the built-in tools, but I wasn't aware of the tools taking the ideas one step further. Since then I had the chance to work with &lt;a href="http://www.devexpress.com/Products/NET/IDETools/CodeRush/"&gt;CodeRush&lt;/a&gt; and &lt;a href="http://www.jetbrains.com/resharper/"&gt;ReSharper&lt;/a&gt;. &lt;a href="http://www.hanselman.com/blog/" rel="acquaintance"&gt;Scott Hanselman&lt;/a&gt;&amp;nbsp;likes CodeRush a lot, but was fairly overwhelmed by its vast array of options and tweaks. Sometimes it has even been a productivity killer when some shortcut was misinterpreted, but this might have been a configuration issue on my part.&lt;/p&gt; &lt;p&gt;Half a year the folks at &lt;a href="http://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt; introduced me to their productivity solution for Visual Studio named &lt;a href="http://www.jetbrains.com/resharper/"&gt;ReSharper&lt;/a&gt;. ReSharper has a lots of &lt;a href="http://www.jetbrains.com/resharper/features/"&gt;features&lt;/a&gt; that may be comparable to CodeRush, but I like it better&amp;nbsp;primarily because there's not too much pre-configured. Also,&amp;nbsp;ReSharper&amp;nbsp;can &lt;a href="http://www.jetbrains.com/resharper/features/code_formatting.html"&gt;reformat code&lt;/a&gt; according to your own/your team's&amp;nbsp;conventions, which is a blast. You can slowly work your way into using ReSharper over time, I recommend reading&amp;nbsp;&lt;a href="http://excastle.com/blog/archive/2007/01/31/13141.aspx"&gt;the excellent introduction by Joe White&lt;/a&gt;.&amp;nbsp;Read &lt;em&gt;one&lt;/em&gt; post per day and try to apply the functionality immediately afterwards. It's very likely you'll be sold to the product, it's a huge productivity gain.&lt;/p&gt; &lt;h3&gt;Issues&lt;/h3&gt; &lt;p&gt;That's been a rather long introduction, so without further ado let's advance to the core of the discussion. I'm a huge fan of ReSharper but updating has been a real hassle until now. At work I use&amp;nbsp;two ReSharper versions, one&amp;nbsp;for Visual Studio .NET 2003 and another built&amp;nbsp;for Visual Studio 2005. Upgrading one version sometimes seems to have effects on the other.&amp;nbsp;Last week for example&amp;nbsp;I lost my user-defined templates for VS 2003 when I upgraded to ReSharper 3.0 which only runs on VS 2005. Finding a highly customized IDE&amp;nbsp;reset for no apparent reason is pretty much of a dealbreaker for me because I really don't like starting over.&lt;/p&gt; &lt;p style="text-align: center"&gt;&lt;a title="Duplicate Commands" href="http://www.therightstuff.de/content/binary/WindowsLiveWriter/CleaningVisualStudiofromReSha.5Leftovers_13328/Duplicate%20Commands.png" rel="lightbox"&gt;&lt;img alt="Duplicate Commands" src="http://www.therightstuff.de/content/binary/WindowsLiveWriter/CleaningVisualStudiofromReSha.5Leftovers_13328/Duplicate%20Commands_thumb.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At home, after working&amp;nbsp;with ReSharper 2.5&amp;nbsp;for&amp;nbsp;about&amp;nbsp;four months,&amp;nbsp;I recently upgraded to ReSharper 3.0.&amp;nbsp;Both versions run as a Visual Studio 2005 Add-In. What I see here is duplicate context menu entries and old entries in the Visual Studio commands window. (The new commands start with "ReSharper.")&lt;/p&gt; &lt;p style="text-align: center"&gt;&lt;img title="Duplicate Menu Entries" alt="Duplicate Menu Entries" src="http://www.therightstuff.de/content/binary/WindowsLiveWriter/CleaningVisualStudiofromReSha.5Leftovers_13328/Duplicate%20Menu%20Entries_3c4d9591-92bf-4529-b132-640e5f9813be.png"&gt;&lt;/p&gt; &lt;p&gt;These issue have been &lt;a href="http://www.intellij.net/forums/message.jspa?messageID=5190947"&gt;documented on the support forums&lt;/a&gt;&amp;nbsp;and&amp;nbsp;the official excuse is that&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;…&amp;nbsp;the uninstaller is not always capable of removing&amp;nbsp;[the menus] nicely.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;According to the posts on the forums JetBrains has introduced a new method of inserting menu items which hopefully solves these issues in the future. For now they actually&amp;nbsp;&lt;em&gt;recommend&lt;/em&gt; resetting your ReSharper settings. Thank you, great idea!  &lt;h3&gt;Solutions&lt;/h3&gt; &lt;p&gt;Because I didn't want to lose my settings I wrote a couple of macros for Visual Studio that should help you getting rid of ReSharper 2.5 remnants. The macro project has two runnable methods.&lt;/p&gt; &lt;h4&gt;Key bindings&lt;/h4&gt; &lt;p&gt;The first one, &lt;strong&gt;GetKeyboardBindings&lt;/strong&gt;,&amp;nbsp;&amp;nbsp;looks at all of Visual Studio's commands&amp;nbsp;and filters those relevant to ReSharper. A Visual Studio command is a unit of work, i.e. "Save that file" or "Refactor this class". Those starting with "ReSharper" will be included, so 2.5 and 3.0 commands will be on that list. You can use the macro to get quick overview of your keyboard bindings specific to ReSharper. Take a look at the output window in the Visual Studio Macro IDE:&lt;/p&gt; &lt;p style="text-align: center"&gt;&lt;img title="Key Bindings" alt="Key Bindings" src="http://www.therightstuff.de/content/binary/WindowsLiveWriter/CleaningVisualStudiofromReSha.5Leftovers_13328/Key%20bindings_af6ece1e-d135-4291-89f8-43fa91bc676b.png"&gt;&lt;/p&gt; &lt;p&gt;Paste the contents of the window to a text file for later reference.&lt;/p&gt; &lt;h4&gt;Getting Rid of the Old Stuff&lt;/h4&gt; &lt;p&gt;The &lt;strong&gt;CleanupReSharperLeftOvers&lt;/strong&gt;&amp;nbsp;macro basically scans all menus of Visual Studio, which also include context menus that can't be accessed using the Tools/Customize… menu. Because I couldn't find a way to get the associated command of a&amp;nbsp;specific menu item (is there one?), things are getting a&amp;nbsp;bit tricky.&lt;/p&gt; &lt;p&gt;I've collected a list of duplicate context menu items from &lt;em&gt;my&lt;/em&gt; machine. Maybe there are some more on your box, maybe there are less. JetBrains supports our noble intent as they introduced keyboard shortcuts for some of my duplicates, which changes the menu item's name from "Reformat Code…" in ReSharper 2.5 to&amp;nbsp;"Re&lt;strong&gt;&amp;amp;&lt;/strong&gt;format Code…" in 3.0. Some items like "Go to Base/Declaration/Inheritor", on the other hand, didn't change the macro will affect &lt;strong&gt;both the old and the new menu items&lt;/strong&gt;. I couldn't care less since&amp;nbsp;I didn't use them anyway.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Important note:&lt;/strong&gt; ReSharper will not recreate any of the menu items you removed using the macro. You can change the items to be removed by editing the &lt;code&gt;_reSharperDuplicates&lt;/code&gt; list:&lt;/p&gt; &lt;div&gt;&lt;pre&gt;&lt;span style="color: #0000ff"&gt;Dim&lt;/span&gt; _reSharperDuplicates() &lt;span style="color: #0000ff"&gt;As&lt;/span&gt; &lt;span style="color: #0000ff"&gt;String&lt;/span&gt; = {&lt;span style="color: #006080"&gt;"Reformat Code..."&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Optimize Usings..."&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Run Unit Tests"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Debug Unit Tests"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"New from template"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Refactor"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Find usages"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Find usages advanced"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Go to Base"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Go to Declaration"&lt;/span&gt;, _
                                        &lt;span style="color: #006080"&gt;"Go to Inheritor"&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To play safe I included a global named &lt;code&gt;_testMode&lt;/code&gt; which will keep everything as-is as long is it's set to &lt;code&gt;true&lt;/code&gt;, which is the default.&lt;/p&gt;
&lt;h3&gt;Download&lt;/h3&gt;
&lt;p&gt;Hopefully these macros don't break anything, at least they didn't for me. Please, make&amp;nbsp;a backup and use at your own risk. Keep in mind that &lt;abbr title="Your mileage may vary"&gt;YMMV.&lt;/abbr&gt;&lt;/p&gt;
&lt;div class="download"&gt;
&lt;p&gt;&lt;img class="download" title="Download" style="margin-right: 4px" alt="Download" src="http://www.therightstuff.de/content/binary/Download.gif"&gt;&lt;a href="http://www.therightstuff.de/download/ReSharper-VS-Macros-1.0.zip"&gt;Download the macros&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</Content>
      <Created>2007-07-09T23:58:43.1406250+02:00</Created>
      <Modified>2007-07-10T01:20:56.4407500+02:00</Modified>
      <EntryId>7dbc3468-04a7-4afa-a09d-06d67a603934</EntryId>
      <Description />
      <Title>Cleaning Visual Studio from ReSharper 2.5 Leftovers</Title>
      <Categories>Visual Studio</Categories>
      <Author>agross</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
    </Entry>
  </Entries>
</DayEntry>