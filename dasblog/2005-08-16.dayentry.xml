<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2005-08-16T02:00:00.0000000+02:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;I am a lazy person. As a (every?) developer I want to relieve users from cumbersome tasks that recur often enough to justify an automated solution.&lt;/p&gt;
&lt;p&gt;So it is with the cumbersome assembly of the "Now Playing" line on the end of each post I introduced in &lt;a href="http://www.it99.org/axl/PermaLink,guid,a7888f82-9ae7-4e58-8985-630a03a7a302.aspx"&gt;my first blog entry&lt;/a&gt;. I want to let it consist of the following elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A prefix, "Now Playing: " in my case,
&lt;/li&gt;&lt;li&gt;The artists of the currently playing track,
&lt;/li&gt;&lt;li&gt;The album (if any) of the currently playing track,
&lt;/li&gt;&lt;li&gt;The title of the currently playing track.&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;The artists fragment should be linked to &lt;a href="http://www.music-map.de/"&gt;Music-Map&lt;/a&gt; as this service shows a nice overview of artists/bands&amp;nbsp;other people liked - a great way to figure out if you may like that kind of music. The album part should be linked to &lt;a href="http://www.amazon.de/"&gt;Amazon&lt;/a&gt; so you can dig into the details of the CD and&amp;nbsp;listen to&amp;nbsp;samples. Links should only be added if there's such information available, of course.&lt;/p&gt;
&lt;p&gt;The three times I've put together the "Now Playing"&amp;nbsp;line&amp;nbsp;manually showed me that this is definitely such a recurring task. After two days Now Playing 1.0 is ready for take-off. It tells &lt;a href="http://www.winamp.com/"&gt;my favorite music player&lt;/a&gt; to get the aforementioned info of the currently playing item, queries Music-Map and &lt;a href="http://www.amazon.com/gp/browse.html/102-7351504-4539365?%5Fencoding=UTF8&amp;amp;node=3435361"&gt;Amazon's Web Services&lt;/a&gt; for the links and assembles the&amp;nbsp;resulting HTML markup.&lt;/p&gt;
&lt;p align="center"&gt;&lt;img src="http://www.it99.org/axl/content/binary/NowPlaying%201.0.gif" border="0"&gt;&lt;/p&gt;
&lt;p&gt;The application is entirely written in C#. For pulling the track info out of the music player there were little tricks needed: Winamp doesn't support giving the info to out-of-process components so a plugin would be the easiest way to retrieve the info and hand it over to another application through some IPC mechanism. In contrast to that, my goal was to create a solution that's not depended on plugins. After some research I found that &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/memory/base/virtualallocex.asp"&gt;VirtualAllocEx()&lt;/a&gt; is able to&amp;nbsp;reserve memory in a foreign process. &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/debug/base/readprocessmemory.asp"&gt;ReadProcessMemory()&lt;/a&gt; and &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/debug/base/writeprocessmemory.asp"&gt;WriteProcessMemory()&lt;/a&gt;&amp;nbsp;are the functions to manipulate such a memory region. All I needed to do was to set up the query structure in such a way that it resides in Winamp's address space and&amp;nbsp;send&amp;nbsp;the query-track-info message&amp;nbsp;to its main window. Winamp happily writes the desired results into "my" memory in its own address space. After reading them and &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/memory/base/virtualfreeex.asp"&gt;freeing&lt;/a&gt; the block of memory I can go on with the web queries.&lt;/p&gt;
&lt;p&gt;As always when working with &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconmarshalingdatawithplatforminvoke.asp"&gt;Platform Invoke&lt;/a&gt;, &lt;a href="http://www.pinvoke.net/"&gt;www.pinvoke.net&lt;/a&gt; and their &lt;a href="http://www.gotdotnet.com/Community/UserSamples/Details.aspx?SampleGuid=75122f62-5459-4364-b9ba-7b5e6a4754fe"&gt;VS.NET Add-In&lt;/a&gt; was a great help.&lt;/p&gt;
&lt;p&gt;&lt;img title="Download" class="download" style="margin-right: 4px;" alt="Download" src="http://www.it99.org/axl/content/binary/Download.gif"&gt;Download the &lt;a href="http://www.it99.org/axl/download/NowPlaying-1.0.zip"&gt;binaries&lt;/a&gt;. Have a look at the NowPlaying.exe.config file as you will need to enter you Amazon Developer Subscription ID (create one &lt;a href="https://aws-portal.amazon.com/gp/aws/developer/registration/index.html/102-7351504-4539365"&gt;here&lt;/a&gt;). The string/HTML fragments are stored there too.&lt;/p&gt;
&lt;p&gt;Here's the result of the first usage in production mode:&lt;/p&gt;
&lt;p class="now-playing"&gt;Now playing: &lt;a href="http://www.music-map.de/aimee+mann.html"&gt;Aimee Mann&lt;/a&gt; - &lt;a href="http://www.amazon.com/exec/obidos/ASIN/B00006AAJF/therightstu0e-20"&gt;Lost in space&lt;/a&gt; - Lost in space&lt;/p&gt;</Content>
      <Created>2005-08-16T23:25:33.4060000+02:00</Created>
      <Modified>2006-12-16T20:46:46.8408188+01:00</Modified>
      <EntryId>e786d734-836e-4eba-93be-cbbb71be7089</EntryId>
      <Description />
      <Title>Now Playing 1.0</Title>
      <Categories>Music;Now Playing</Categories>
      <Author>agross</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
    </Entry>
  </Entries>
</DayEntry>