<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2007-03-03T01:00:00.0000000+01:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;While browsing my ever increasing stack of unread &lt;a href="http://www.larkware.com/" rel="previewlink"&gt;The Daily Grind&lt;/a&gt; posts I came across a blog post by &lt;a href="http://odetocode.com/Blogs/scott/" rel=" contact"&gt;K. Scott Allen&lt;/a&gt;&amp;nbsp;that describes &lt;a href="http://odetocode.com/Blogs/scott/archive/2007/02/10/10505.aspx" rel="previewlink"&gt;how to sort Visual Studio's "Add New Item" dialog with PowerShell&lt;/a&gt;. Neat idea, as I always disliked the fact that Visual Studio has no way of sorting these items alphabetically but relies on a &lt;a href="http://msdn2.microsoft.com/en-us/library/ms171389%28VS.80%29.aspx" rel="previewlink"&gt;property inside vstemplate files&lt;/a&gt;.&lt;/p&gt; &lt;p align="center"&gt;&lt;a title="Visual Studio Default Sort Order" href="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/Unsorted2.png" rel="lightbox[SortVSItems]"&gt;&lt;img alt="Visual Studio Default Sort Order" src="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/Unsorted_thumb.png"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After downloading and running the &lt;a href="http://www.microsoft.com/windowsserver2003/technologies/management/powershell/default.mspx" rel="previewlink"&gt;PowerShell&lt;/a&gt; &lt;a href="http://odetocode.com/Blogs/scott/archive/2007/02/10/10505.aspx" rel="previewlink"&gt;script&lt;/a&gt; he provides on my machine, I was greeted with &lt;a href="http://odetocode.com/Blogs/scott/archive/2007/02/10/10505.aspx#10523" rel="previewlink"&gt;some error messages&lt;/a&gt;. Some &lt;a href="http://www.microsoft.com/downloads/details.aspx?familyid=F54F5537-CC86-4BF5-AE44-F5A1E805680D" rel="previewlink"&gt;WinFX templates&lt;/a&gt; were destroyed, as these have an &lt;strong&gt;App_Code&lt;/strong&gt; subfolder inside the zip that the Scott's script doesn't handle well. Fortunately the script creates backups so it wasn't a dealbreaker but rather a point to start from revisiting the script and making it more compatible.&lt;/p&gt;&lt;pre&gt;# sort-vsItems
# scott at OdeToCode dot com
# Modified by AlexanderGross at gmx dot de
#
# Use at your own risk!
# Script will make a backup of each template just in case.
&amp;nbsp;
# vjslib for .zip support.
[System.Reflection.Assembly]::Load("vjslib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a") | out-null
&amp;nbsp;
# Get list of VS installed templates.
$installDir = [System.IO.Path]::Combine((gp HKLM:Software\Microsoft\VisualStudio\8.0).InstallDir, "ItemTemplates")
$templateFiles = gci -recurse $installDir | ? {$_.extension -eq ".zip"}
&amp;nbsp;
# Append list of custom templates.
$installDir = [System.IO.Path]::Combine((gp "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders").Personal, "Visual Studio 2005\Templates\ItemTemplates")&lt;br&gt;$templateFiles += gci -recurse $installDir | ? {$_.extension -eq ".zip"}
&amp;nbsp;
# Sort all templates by filename.
$templateFiles = $templateFiles | sort name
&amp;nbsp;
$i = 1
$count = 0
$tmpDir = new-item ([System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), [System.IO.Path]::GetRandomFileName())) -type directory
$buffer = new-object System.SByte[] (8192)
&amp;nbsp;
# Iterate through all template files.
foreach($templateFile in $templateFiles)
{
&amp;nbsp;&amp;nbsp;&amp;nbsp; write-host "Processing" $templateFile.FullName
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; # Extract all files (no methods available to modify zip in place).
&amp;nbsp;&amp;nbsp;&amp;nbsp; $zip = new-object java.util.zip.ZipFile($templateFile.FullName)
&amp;nbsp;&amp;nbsp;&amp;nbsp; $entries = $zip.entries()
&amp;nbsp;&amp;nbsp;&amp;nbsp; while($entries.hasMoreElements())
&amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $zipEntry = $entries.nextElement()
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Ensure output directory exists.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $filename = [System.IO.Path]::Combine($tmpDir.FullName, $zipEntry.getName())
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # $zipEntry.isDirectory() does not work for Microsoft zips (e.g. Web\CSharp\WinFxServiceItemTemplate.zip).
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $directory = [System.IO.Path]::GetDirectoryName($filename)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if ([System.IO.Directory]::Exists($directory) -ne $true)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; mkdir $directory | out-null
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # In case the zip tells us it's a directory entry, skip the entry to prevent exceptions.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if ($zipEntry.isDirectory())
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; continue
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $in = $zip.getInputStream($zipEntry)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $out = new-object java.io.FileOutputStream($filename)
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(($count = $in.read($buffer, 0, $buffer.Count)) -gt 0)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $out.write($buffer, 0, $count)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $out.Close()
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $in.Close()
&amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;&amp;nbsp;&amp;nbsp; $zip.Close()
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; # Tweak the sort order element.
&amp;nbsp;&amp;nbsp;&amp;nbsp; $vst = gci -recurse $tmpDir | ? {$_.extension -eq ".vstemplate"}
&amp;nbsp;&amp;nbsp;&amp;nbsp; if ($vst -eq $null)
&amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # The zip file does not contain a vstemplate.
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Clean temporary directory for the next template file.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; del $tmpDir\* -force -recurse
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; continue
&amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; $xmlDoc = new-object System.Xml.XmlDocument
&amp;nbsp;&amp;nbsp;&amp;nbsp; $xmlDoc.Load($vst.FullName)
&amp;nbsp;&amp;nbsp;&amp;nbsp; if ($xmlDoc.VSTemplate.TemplateData.SortOrder -ne $null)
&amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Sort by zip name. Sort order must be a multiple of 10.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $xmlDoc.VSTemplate.TemplateData.SortOrder = ($i++ * 10).ToString()
&amp;nbsp;
&lt;span style="color: red;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Sort by item name in Visual Studio.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Uncomment this line if you want to let Visual Studio sort by item name.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # $xmlDoc.VSTemplate.TemplateData.SortOrder = "10"&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $xmlDoc.Save($vst.FullName)
&amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; # Backup existing zip file.
&amp;nbsp;&amp;nbsp;&amp;nbsp; $backupName = $templateFile.FullName + ".bak"
&amp;nbsp;&amp;nbsp;&amp;nbsp; if(test-path $backupName)
&amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Remove previous backups.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; remove-item $backupName
&amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;&amp;nbsp;&amp;nbsp; move-item $templateFile.FullName $backupName
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; # Zip up modified version.
&amp;nbsp;&amp;nbsp;&amp;nbsp; $zip = new-object java.util.zip.ZipOutputStream(new-object java.io.FileOutputStream($templateFile.FullName))
&amp;nbsp;&amp;nbsp;&amp;nbsp; $files = gci -recurse $tmpDir
&amp;nbsp;&amp;nbsp;&amp;nbsp; foreach($file in $files)
&amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if ($file.Attributes -contains "Directory")
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Subfolders are created automatically with files residing in subfolders.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; continue
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Create a file entry.
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # Replacing the last backslash from $tmpDir.FullName is crucial, the zips would work with any other
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # zip editor but Visual Studio doesn't like files with a leading backslash (though one doesn't see
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; # it in WinZip).
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $zipEntry = new-object java.util.zip.ZipEntry($file.FullName.Replace($tmpDir.FullName + "\", ""))
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $zip.putNextEntry($zipEntry)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $in = new-object java.io.FileInputStream($file.FullName)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(($count = $in.read($buffer, 0, $buffer.Count)) -gt 0)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; {
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $zip.write($buffer, 0, $count)
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $in.close()
&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; $zip.closeEntry()
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; }
&amp;nbsp;&amp;nbsp;&amp;nbsp; $zip.close()
&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp; # Clean temporary directory for the next template file.
&amp;nbsp;&amp;nbsp;&amp;nbsp; del $tmpDir\* -force -recurse
}
&amp;nbsp;
del $tmpDir -force -recurse
&amp;nbsp;
write-host "Running Visual Studio to refresh templates"
$vstudio = (gp HKLM:Software\Microsoft\VisualStudio\8.0).InstallDir
&amp;amp; $vstudio\devenv /setup
&lt;/pre&gt;
&lt;p&gt;&lt;img class="download" title="Download" style="margin-right: 4px" alt="Download" src="http://www.it99.org/axl/content/binary/Download.gif"&gt;&lt;a href="http://www.it99.org/axl/download/Sort-Visual-Studio-Items-1.1.zip"&gt;Download the updated script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please note the part highlighted in red: If you leave that last red line commented, the item template entries will be sorted based on the zip file name. Just like Scott's original script did. As you can see in the screenshot below, this will get you some pseudo-grouping as all WinFX templates are at the bottom.&lt;/p&gt;
&lt;p align="center"&gt;&lt;a title="Sorted by Zip File Name" href="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/SortedByZipName2.png" rel="lightbox[SortVSItems]"&gt;&lt;img alt="Sorted by Zip File Name" src="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/SortedByZipName_thumb.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to let Visual Studio do the sorting, uncomment the last red line and you'll get truly sorted item templates.&lt;/p&gt;
&lt;p align="center"&gt;&lt;a title="Sorted by Item Name" href="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/SortedByItemName2.png" rel="lightbox[SortVSItems]"&gt;&lt;img alt="Sorted by Item Name" src="http://www.it99.org/axl/content/binary/WindowsLiveWriter/SortingVisualStudiosAddNewItemDialog_EAEF/SortedByItemName_thumb.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There's also another solution to the problem, but &lt;a href="http://www.bartholomew.id.au/FixVsItemSortOrder.ashx" rel="previewlink"&gt;FixVsItemSortOrder 1.0.3.5361&lt;/a&gt;&amp;nbsp;has a bug that prevents &lt;strong&gt;"&amp;lt;Language&amp;gt;ProjectItems"&lt;/strong&gt; folders from being sorted (so says the readme). Not sure what he means there because there's no &lt;strong&gt;ProjectItems&lt;/strong&gt; folder, maybe he means the &lt;strong&gt;ProjectTemplates&lt;/strong&gt; folder. FixVsItemSortOrder, in contrast to the PowerShell script above, also doesn't take user-specific item templates into account.&lt;/p&gt;
&lt;p class="now-playing"&gt;Now Playing [&lt;a title="Find out about Now Playing" href="http://www.it99.org/axl/Projects/NowPlaying/" rel="previewlink"&gt;?&lt;/a&gt;]: &lt;a title="Display relations of Air to other artists" href="http://www.music-map.de/air.html"&gt;Air&lt;/a&gt; – &lt;a title="Display Amazon page of the The Virgin Suicides O.S.T. album" href="http://www.amazon.com/exec/obidos/ASIN/B00004KD51/therightstu0e-20"&gt;The Virgin Suicides O.S.T.&lt;/a&gt; – Bathroom girl&lt;/p&gt;</Content>
      <Created>2007-03-03T18:33:21.2491250+01:00</Created>
      <Modified>2007-03-05T20:29:30.0928750+01:00</Modified>
      <EntryId>077a7b03-3504-47e7-82e6-5e20a0240bcc</EntryId>
      <Title>Sorting Visual Studio's &amp;quot;Add New Item&amp;quot; Dialog</Title>
      <Categories>PowerShell;Visual Studio</Categories>
      <Author>agross</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
    </Entry>
  </Entries>
</DayEntry>