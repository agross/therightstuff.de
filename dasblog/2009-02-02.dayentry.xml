<?xml version="1.0" encoding="utf-8"?>
<DayEntry xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:newtelligence-com:dasblog:runtime:data">
  <Date>2009-02-02T01:00:00+01:00</Date>
  <Entries>
    <Entry>
      <Content>&lt;p&gt;Last week we got a &lt;a href="http://www.jetbrains.com/teamcity/"&gt;TeamCity&lt;/a&gt; Enterprise license at work. After using this great product for about a year we found ourselves running out of available build configurations. (There are 20 in the fully-functional &lt;a href="http://www.jetbrains.com/teamcity/download/?free"&gt;free Professional edition&lt;/a&gt; which should be enough to evaluate the product. I recommend giving it a try.) There are a couple of advanced features in the TeamCity Enterprise edition we were looking forward to, for example authentication against a LDAP directory, an Active Directory in our case (AD = LDAP + DNS + a bunch of other stuff).&lt;/p&gt;  &lt;p&gt;TeamCity uses LDAP to determine if a user should be able to access the TeamCity web interface. It does that through the LDAP bind operation, asking LDAP to validate the username and password combination entered at the login page.&lt;/p&gt;  &lt;p&gt;&lt;img title="TeamCity Login Dialog" style="border-top-width: 0px; display: block; border-left-width: 0px; float: none; border-bottom-width: 0px; margin-left: auto; margin-right: auto; border-right-width: 0px" height="226" alt="TeamCity Login Dialog" src="http://www.therightstuff.de/content/binary/WindowsLiveWriter/HowToSetUpSecureLDAPAuthenticationwithTe_AD2A/Login_db984166-bf6f-46ec-9d8f-570d646b1ff1.png" width="452" border="0" /&gt; &lt;/p&gt;  &lt;p&gt;After hitting the login button TeamCity will connect to the LDAP server, basically taking the text entered in the dialog above passing it to the LDAP bind operation. If the server accepts the username/password combination this means that access is granted. Some things to take into consideration when using LDAP authentication are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;TeamCity does not authenticate against an organizational unit in Active Directory (X.500 address). It just determines if the user (authenticated by username and password) exists &lt;em&gt;anywhere&lt;/em&gt; in the directory. You can &lt;a href="http://jetbrains.net/tracker/issue/TW-3276"&gt;vote on this ticket&lt;/a&gt; to get that fixed. &lt;/li&gt;    &lt;li&gt;Because TeamCity does not try to get additional information on the user’s groups memberships it is currently (as of TeamCity 4.0) not possible to automatically assign &lt;a href="http://www.jetbrains.net/confluence/display/TCD4/Role+and+Permission"&gt;TeamCity roles&lt;/a&gt; to an LDAP user. &lt;/li&gt;    &lt;li&gt;If you use the &lt;a href="http://www.jetbrains.net/confluence/display/TCD4/Authentication+Settings#AuthenticationSettings-LDAPAuthentication"&gt;default LDAP configuration settings&lt;/a&gt; as shown in the TeamCity documentation, the LDAP connection will be &lt;em&gt;unsecured&lt;/em&gt;, making the username and password vulnerable to eavesdropping by anyone who knows how to use packet sniffer. &lt;/li&gt;    &lt;li&gt;Specific to Windows: You &lt;em&gt;do not&lt;/em&gt; need an Active Directory infrastructure with a Domain Controller in place. Windows also supports Active Directory Application Mode (ADAM) on Windows Server 2003, renamed to Active Directory Lightweight Directory Services (AD LDS) in Windows Server 2008. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Given the things above, what are your options to secure the LDAP connection? You could change the authentication scheme to not use &amp;quot;simple” LDAP authentication, but choose from &lt;a href="http://java.sun.com/products/jndi/tutorial/ldap/security/sasl.html"&gt;a variety of SASL options&lt;/a&gt;. I didn’t go down that road, because when I started to configure LDAP for TeamCity I basically knew nothing about neither LDAP nor SASL.&lt;/p&gt;  &lt;p&gt;Using LDAPS (LDAP over SSL), which is also supported by Windows servers running some AD mode, appeared to be a viable option to enforce secure communication between TeamCity and the LDAP server.&lt;/p&gt;  &lt;h3&gt;Installing The LDAP Server&lt;/h3&gt;  &lt;h4&gt;Setting Up LDAPS with Active Directory (Domain Controller mode)&lt;/h4&gt;  &lt;p&gt;There’s not much set up needed with this configuration. When you install Active Directory in Domain Controller mode you should also get an instance of Certificate Services that will create a self-signed certificate for your domain controller. This certificate will be used for LDAPS connections to the directory server, which is typically the domain controller.&lt;/p&gt;  &lt;p&gt;As an aside, I’m not expert in setting up AD, please refer to your network administrator.&lt;/p&gt;  &lt;h4&gt;Setting Up LDAPS with Active Directory Application Mode (ADAM) or Active Directory Lightweight Directory Services (AD LDS)&lt;/h4&gt;  &lt;p&gt;As noted above, this setup is supported on any Windows Server and does not require the full-blown “Domain Controller” version of Active Directory. ADAM/LDS supports user authentication either against the ADAM/LDS instance (users created in the directory) or a against local Windows accounts (through a user proxy, see below)&lt;/p&gt;  &lt;h5&gt;Installing ADAM or AD LDS&lt;/h5&gt;  &lt;p&gt;&lt;a href="http://technet.microsoft.com/en-us/library/cc739247.aspx"&gt;Installing ADAM&lt;/a&gt;/LDS differs depending on which Windows Server version you have. I did it with Windows Server 2003:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;Navigate to the Control Panel and open up the Software control panel applet, &lt;strong&gt;appwiz.cpl&lt;/strong&gt; &lt;/li&gt;    &lt;li&gt;Click “Add or remove Windows features” &lt;/li&gt;    &lt;li&gt;Select Active Directory Services, click on the Details… button and select Active Directory Application Mode. Close the window. &lt;/li&gt;    &lt;li&gt;Scroll down to Certificate Services entry and check it. (IIS will also be installed as part of Certificate Services to support web registrations.) &lt;/li&gt;    &lt;li&gt;Click Next. &lt;/li&gt;    &lt;li&gt;On the next dialog, you will be asked what type of Root Certificate Authority (CA) to install. Select “stand-alone“ CA and also check the “Create key pair” option. &lt;/li&gt;    &lt;li&gt;The next dialogs allows to select different options for the Root CA keys and the CA itself. I went with the defaults. &lt;/li&gt;    &lt;li&gt;Certificate Services and ADAM will be installed. &lt;/li&gt;    &lt;li&gt;Under Programs in the Start Menu there will be a new folder named “ADAM”. Click on the “Create ADAM instance” link. &lt;/li&gt;    &lt;li&gt;The ADAM wizard pops up, click Next. &lt;/li&gt;    &lt;li&gt;Choose “Create new unique instance” and click Next. &lt;/li&gt;    &lt;li&gt;Enter the name of the ADAM instance. I chose “TeamCity”, because we’re using ADAM to authenticate TeamCity users. Click Next. &lt;/li&gt;    &lt;li&gt;Write down the ports that are presented in the next step. The default LDAP port is 389, and the port for LDAPS is 636. Click Next. &lt;/li&gt;    &lt;li&gt;In the next step, choose to create a directory partition. Mine is called &lt;code&gt;CN=TeamCity, DC=test, DC=local&lt;/code&gt;. Click Next until you reach the “Import LDIF files” dialog. &lt;/li&gt;    &lt;li&gt;Import at least the &lt;strong&gt;MS-User.ldf&lt;/strong&gt; and &lt;strong&gt;MS-UserProxy.ldf&lt;/strong&gt; schemas to enable the creation of local directory users and user proxies for Windows accounts. &lt;/li&gt;    &lt;li&gt;Click Next and wait for ADAM to be configured. &lt;/li&gt; &lt;/ol&gt;  &lt;h5&gt;Setting Up ADAM or AD LDS to Accept SSL Connections&lt;/h5&gt;  &lt;p&gt;There are two good tutorials that I used to enable SSL on ADAM, so I won’t reiterate them here. I suppose the process of enabling SSL on LDS is similar.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://goatly.spaces.live.com/blog/cns!ED869F22AB5C24A8!181.entry?wa=wsignin1.0&amp;amp;sa=246296799"&gt;Configuring ADAM to use SSL&lt;/a&gt; by &lt;a href="http://cid-ed869f22ab5c24a8.profile.live.com/"&gt;Mike Goatly&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;&lt;a href="http://www.ultravoid.com/wordpress/?p=16"&gt;ADAM and SSL&lt;/a&gt; by &lt;a href="http://www.ultravoid.com/wordpress"&gt;Thomas Olausson&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt;  &lt;h5&gt;User Management&lt;/h5&gt;  &lt;p&gt;You now have a LDAP server running that will serve requests for the LDAP and LDAPS protocols. Next, you would have to add users to the directory, which could either be&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Local directory users: user and password stored in the directory; used with “simple” bindings, or &lt;/li&gt;    &lt;li&gt;Windows users: users password stored by the local Windows account manager or in a full-blown AD domain; used with “proxied” bindings (from the outside, these also appear as “simple” bindings). &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Windows users require a user proxy in the directory, linking the proxy to a Windows account SID. The link between the proxy and the Windows account is established though the Windows account’s Security Identifier (SID) which must be supplied when the proxy is created. Setting up user proxies is a bit &lt;a href="http://technet.microsoft.com/en-us/library/cc784622.aspx"&gt;complicated&lt;/a&gt; and well worth another post. &lt;/p&gt;  &lt;p&gt;Please note that by default &lt;strong&gt;authenticating users through their respective proxies (proxied binding) requires a secure connection&lt;/strong&gt;, &lt;a href="http://blogs.dirteam.com/blogs/tomek/archive/2006/09/24/Disable-simple-bind-without-SSL-on-ADAM.aspx"&gt;unless you explicitly disable it&lt;/a&gt;. Unfortunately the attribute to change is not given in the linked article: it is &lt;code&gt;msDS-Other-Settings&lt;/code&gt;. You can either require security for simple or proxied bindings by setting &lt;code&gt;RequireSecureProxyBind&lt;/code&gt; (defaults to &lt;code&gt;1&lt;/code&gt;) and &lt;code&gt;RequireSecureSimpleBind&lt;/code&gt; (defaults to &lt;code&gt;0&lt;/code&gt;) to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;  &lt;p&gt;The net result of the &lt;em&gt;default&lt;/em&gt; ADAM configuration (&lt;code&gt;RequireSecureProxyBind=1&lt;/code&gt;) together with the &lt;a href="http://www.jetbrains.net/confluence/display/TCD4/Authentication+Settings#AuthenticationSettings-LDAPAuthentication"&gt;&lt;em&gt;default&lt;/em&gt; TeamCity configuration&lt;/a&gt; (&lt;code&gt;ldap://some-server&lt;/code&gt;, which is unsecured) is that authentication requests for user proxies will &lt;strong&gt;always fail&lt;/strong&gt;.&lt;/p&gt;  &lt;h3&gt;Setting Up TeamCity &lt;/h3&gt;  &lt;h4&gt;Setting Up TeamCity to Use The LDAP Server&lt;/h4&gt;  &lt;p&gt;The easiest way is to start with the &lt;a href="http://www.jetbrains.net/confluence/display/TCD4/Authentication+Settings#AuthenticationSettings-LDAPAuthentication"&gt;default TeamCity configuration&lt;/a&gt; in &lt;strong&gt;&amp;lt;TeamCity data directory&amp;gt;/config/ldap-config.properties&lt;/strong&gt;:&lt;/p&gt;  &lt;pre class="brush: plain" name="code"&gt;java.naming.referral=follow
java.naming.provider.url=ldap://ldap.test.local:389
java.naming.security.authentication=simple&lt;/pre&gt;

&lt;p&gt;Unless you want to require your users to enter their login in the &lt;code&gt;DOMAIN\username&lt;/code&gt; format I recommend adding the loginFilter property:&lt;/p&gt;

&lt;pre class="brush: plain"&gt;java.naming.referral=follow
java.naming.provider.url=ldap://ldap.test.local:389
java.naming.security.authentication=simple
loginFilter=.+&lt;/pre&gt;

&lt;p&gt;Now we need to set up the correct &amp;quot;user name&amp;quot; string to present it to the LDAP server. This string is created from the text entered in the &amp;quot;Username&amp;quot; text box on the login screen (&lt;code&gt;$login$&lt;/code&gt;) and differs depending on whether you use LDAP with AD or ADAM/LDS:&lt;/p&gt;

&lt;pre class="brush: plain"&gt;java.naming.referral=follow
java.naming.provider.url=ldap://ldap.test.local:389
java.naming.security.authentication=simple
loginFilter=.+

# AD - authenticate against the TEST domain
formatDN=TEST\\$login$

# ADAM and presumably AD LDS - users will have to reside in the CN=Users,CN=TeamCity,DC=test,DC=local container
formatDN=CN=$login$,CN=Users,CN=TeamCity,DC=test,DC=local&lt;/pre&gt;

&lt;h4&gt;Setting Up LDAPS Security&lt;/h4&gt;

&lt;p&gt;Enabling LDAPS is pretty easy from a TeamCity perspective. You just have to change line 2 of the configuration above to use the secure LDAP protocol:&lt;/p&gt;

&lt;pre class="brush: plain"&gt;java.naming.referral=follow
java.naming.provider.url=ldaps://ldap.test.local:636
java.naming.security.authentication=simple
loginFilter=.+
formatDN=&amp;lt;some value&amp;gt;&lt;/pre&gt;

&lt;p&gt;Changing the protocol to use ldaps:// will not instantly work and users would not be authenticated. Why?&lt;/p&gt;

&lt;h4&gt;Trusting The Certificate&lt;/h4&gt;

&lt;p&gt;What does LDAPS mean from a Java perspective? If you work on a domain (AD) or use ADAM/LDS with SSL you are very likely to work with &lt;a href="http://en.wikipedia.org/wiki/Self-signed_certificate"&gt;self-signed SSL certificates&lt;/a&gt;. Such certificates are inherently untrusted as they are not issued by some trusted party (and this trusted party will charge money). Nevertheless they are perfectly okay for your environment.&lt;/p&gt;

&lt;p&gt;When TeamCity establishes the SSL connection to your LDAP server, it is first presented with that untrusted certificate – and bails. Here’s a snippet from the TeamCity log files:&lt;/p&gt;

&lt;pre class="brush: plain"&gt;[2009-01-27 16:14:39,864]  ERROR - Side.impl.auth.LDAPLoginModule - 
 
javax.naming.CommunicationException: simple bind failed: ldap.test.local:636
[Root exception is javax.net.ssl.SSLHandshakeException:
sun.security.validator.ValidatorException: PKIX path building failed:
sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target]&lt;/pre&gt;

&lt;p&gt;To establish LDAPS connections successfully, you have to tell Java to trust your LDAP server’s certificate. &lt;a href="http://blogs.sun.com/andreas/"&gt;Andreas Sterbenz&lt;/a&gt; has created a little &lt;a href="http://blogs.sun.com/andreas/entry/no_more_unable_to_find"&gt;Java utility called InstallCert&lt;/a&gt; that helps in that regard. Unfortunately you will have to compile it yourself against the Java 1.5 runtime, so &lt;a href="http://therightstuff.de/download/InstallCert.zip"&gt;here’s a compiled version&lt;/a&gt; that works with TeamCity.&lt;/p&gt;

&lt;p&gt;Place the files from the ZIP in your &lt;strong&gt;&amp;lt;TeamCity root&amp;gt;\jre\bin&lt;/strong&gt; directory. Open a command prompt and enter&lt;/p&gt;

&lt;pre class="brush: plain"&gt;java InstallCert ldap.test.local:636&lt;/pre&gt;

&lt;p&gt;Following the procedure described in Andreas' post, the utility will create a file called &lt;strong&gt;jssecacerts&lt;/strong&gt; in the same directory. Overwrite &lt;strong&gt;&amp;lt;TeamCity root&amp;gt;\jre\lib\security\cacerts&lt;/strong&gt; with that file.&lt;/p&gt;

&lt;p&gt;After re-starting the TeamCity web server, it is now able to establish secured connections to the LDAP server. The user names and passwords transmitted over these connections will not be visible to outsiders. &lt;/p&gt;

&lt;h3&gt;Wrapping It Up&lt;/h3&gt;

&lt;p&gt;In this article I’ve shown you how to enable and secure TeamCity’s LDAP authentication in any Windows environment, be it an Active Directory domain or a couple of stand-alone Windows Servers. For both scenarios user management is centralized, either though the AD console or LDAP console in combination with the Windows user management console.&lt;/p&gt;

&lt;p&gt;Figuring out all that has taken a considerable amount of time for me and hopefully saves you a couple of minutes that you can spend outside in the sun.&lt;/p&gt;</Content>
      <Created>2009-02-02T17:35:50.65+01:00</Created>
      <Modified>2009-02-09T03:11:05.7817496+01:00</Modified>
      <EntryId>2e19b03d-6ee1-49c1-b8c9-da5f3db7826f</EntryId>
      <Description />
      <Title>How To Set Up Secure LDAP Authentication with TeamCity</Title>
      <Categories>Build;Networking</Categories>
      <Author>agross</Author>
      <IsPublic>true</IsPublic>
      <Syndicated>true</Syndicated>
      <ShowOnFrontPage>true</ShowOnFrontPage>
      <AllowComments>true</AllowComments>
      <Attachments />
      <Crossposts />
      <Latitude xsi:nil="true" />
      <Longitude xsi:nil="true" />
    </Entry>
  </Entries>
</DayEntry>